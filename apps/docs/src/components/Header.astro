---
import config from 'virtual:starlight/user-config';
import type { Props } from '../props';

import LanguageSelect from 'virtual:starlight/components/LanguageSelect';
import Search from 'virtual:starlight/components/Search';
import SiteTitle from 'virtual:starlight/components/SiteTitle';
import SocialIcons from 'virtual:starlight/components/SocialIcons';
import ThemeSelect from 'virtual:starlight/components/ThemeSelect';

// Default to localhost URLs if environment variables are not set
const adminUrl = import.meta.env.PUBLIC_ADMIN_URL ?? 'http://localhost:4322';
const websiteUrl = import.meta.env.PUBLIC_WEBSITE_URL ?? 'http://localhost:4323';

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
  config.pagefind || config.components.Search !== '@astrojs/starlight/components/Search.astro';
---

<div class="header sl-flex">
  <div class="title-wrapper sl-flex">
    <SiteTitle {...Astro.props} />
  </div>

  <div class="flex gap-4 px-4">
    <a href={adminUrl} class="menu-link" target="_blank" rel="noopener noreferrer">Admin</a>
    <a href={websiteUrl} class="menu-link" target="_blank" rel="noopener noreferrer">Website</a>
  </div>

  <div class="sl-flex print:hidden">
    {shouldRenderSearch && <Search {...Astro.props} />}
  </div>
  <div class="sl-hidden md:sl-flex print:hidden right-group">
    <div class="sl-flex social-icons">
      <SocialIcons {...Astro.props} />
    </div>

    <ThemeSelect {...Astro.props} />
    <LanguageSelect {...Astro.props} />
  </div>
</div>

<style>
  .header {
    gap: var(--sl-nav-gap);
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }

  .title-wrapper {
    /* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
    overflow: clip;
    /* Avoid clipping focus ring around link inside title wrapper. */
    padding: 0.25rem;
    margin: -0.25rem;
    min-width: 0;
  }

  .right-group,
  .social-icons {
    gap: 1rem;
    align-items: center;
  }
  .social-icons::after {
    content: '';
    height: 2rem;
    border-inline-end: 1px solid var(--sl-color-gray-5);
  }

  .horizontal-menu {
    gap: 1.5rem;
    align-items: center;
    margin: 0 1rem;
  }

  .menu-link {
    color: var(--sl-color-gray-2);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .menu-link:hover {
    color: var(--sl-color-white);
  }

  @media (min-width: 50rem) {
    :global(:root[data-has-sidebar]) {
      --__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
    }
    :global(:root:not([data-has-toc])) {
      --__toc-width: 0rem;
    }
    .header {
      --__sidebar-width: max(0rem, var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x));
      --__main-column-fr: calc(
        (
            100% + var(--__sidebar-pad, 0rem) - var(--__toc-width, var(--sl-sidebar-width)) -
              (2 * var(--__toc-width, var(--sl-nav-pad-x))) - var(--sl-content-inline-start, 0rem) -
              var(--sl-content-width)
          ) /
          2
      );
      display: grid;
      grid-template-columns:
        minmax(
          calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
          auto
        )
        auto /* Added column for menu */
        1fr
        auto;
      align-content: center;
    }
  }
</style>
